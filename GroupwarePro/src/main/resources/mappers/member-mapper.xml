<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

	<resultMap id="memberResultSet" type="Member">
		<id property="empNo" column="EMP_NO"/>
		<result property="empName" column="EMP_NAME"/>
		<result property="empReg" column="EMP_REG"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="deptCode" column="DEPT_CODE"/>
		<result property="jobCode" column="JOB_CODE"/>
		<result property="deptTitle" column="DEPT_TITLE"/>
		<result property="jobName" column="JOB_NAME"/>
		<result property="salCode" column="SAL_CODE"/>
		<result property="salary" column="SALARY"/>
		<result property="bonus" column="BONUS"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="retireDate" column="RETIRE_DATE"/>
		<result property="statement" column="STATEMENT"/>
		<result property="gender" column="GENDER"/>
		<result property="loginId" column="LOGIN_ID"/>
		<result property="loginPwd" column="LOGIN_PWD"/>
		<result property="status" column="STATUS"/>
	</resultMap>
	
	<resultMap id="loginResultSet" type="LoginInfo">
		<id property ="empNo" column="EMP_NO"/>
		<result property="loginId" column="LOGIN_ID"/>
		<result property="loginPwd" column="LOGIN_PWD"/>
		<result property="status" column="STATUS"/>
	</resultMap>

	<select id="loginMember" parameterType="Member" resultMap="memberResultSet">
		<!-- 암호화 전 
		select * from member where user_id=#{userId} and user_pwd=#{userPwd} and status='Y'
		-->
		<!-- 암호화 후 -->
		<!--  이전 query
		select * 
		from employee a
		left join login_info b on a.emp_no = b.emp_no
		where b.login_id = #{loginId} and b.status = 'Y'
		-->
		<!--  수정 후 sql query -->
		SELECT A.EMP_NO, EMP_NAME, EMP_REG, PHONE, EMAIL, DEPT_TITLE, JOB_NAME, SAL_CODE, SALARY, BONUS,ENROLL_DATE, RETIRE_DATE,STATEMENT, GENDER,LOGIN_ID,LOGIN_PWD,STATUS
		FROM EMPLOYEE A
		LEFT OUTER JOIN LOGIN_INFO B ON A.EMP_NO = B.EMP_NO
		LEFT OUTER JOIN DEPARTMENT C ON A.DEPT_CODE = C.DEPT_CODE
		LEFT OUTER JOIN JOB D ON A.JOB_CODE = D.JOB_CODE
		WHERE B.LOGIN_ID = #{loginId} AND B.STATUS = 'Y'
		
	</select>
	
	<insert id="insertMember" parameterType="Member">
		INSERT INTO LOGIN_INFO
		values(#{empNo}, #{loginId}, #{loginPwd}, DEFAULT)
	</insert>
	
	<update id="updateMember" parameterType="Member">
		UPDATE EMPLOYEE SET
		EMP_NAME = #{empName}, PHONE= #{phone} EMAIL = #{email}
		WHERE EMP_NO = #{empNo}
	</update>
	
	<update id="updatePassword" parameterType="Member">
		UPDATE LOGIN_INFO SET
		LOGIN_PWD = #{loginPwd}
		WHERE EMP_NO = #{empNo}
	</update>
	
	
	<update id="deleteMember" parameterType="Member">
		UPDATE LOGIN_INFO SET
		STATUS = 'N'
		WHERE EMP_NO = #{empNo}
	</update>
	
	<select id="selectMemberList" resultMap="memberResultSet">
		SELECT A.EMP_NO, EMP_NAME, EMP_REG, PHONE, EMAIL, DEPT_TITLE, JOB_NAME, SAL_CODE, SALARY, BONUS,ENROLL_DATE, RETIRE_DATE,STATEMENT, GENDER,LOGIN_ID,LOGIN_PWD,STATUS
		FROM EMPLOYEE A
		LEFT OUTER JOIN LOGIN_INFO B ON A.EMP_NO = B.EMP_NO
		LEFT OUTER JOIN DEPARTMENT C ON A.DEPT_CODE = C.DEPT_CODE
		LEFT OUTER JOIN JOB D ON A.JOB_CODE = D.JOB_CODE
		WHERE A.STATEMENT = 'Y'
		ORDER BY EMP_NO ASC
	</select>
	
	<select id="sortMemberList" parameterType="String" resultMap="memberResultSet">
		SELECT A.EMP_NO, EMP_NAME, EMP_REG, PHONE, EMAIL, DEPT_TITLE, JOB_NAME, SAL_CODE, SALARY, BONUS,ENROLL_DATE, RETIRE_DATE,STATEMENT, GENDER,LOGIN_ID,LOGIN_PWD,STATUS
		FROM EMPLOYEE A
		LEFT OUTER JOIN LOGIN_INFO B ON A.EMP_NO = B.EMP_NO
		LEFT OUTER JOIN DEPARTMENT C ON A.DEPT_CODE = C.DEPT_CODE
		LEFT OUTER JOIN JOB D ON A.JOB_CODE = D.JOB_CODE
		WHERE A.STATEMENT = 'Y'
		ORDER BY #{value} ASC
	</select>	
	
	<select id="selectMember" parameterType="String" resultMap="memberResultSet">
		SELECT A.EMP_NO, EMP_NAME, EMP_REG, PHONE, EMAIL, DEPT_TITLE, JOB_NAME, SAL_CODE, SALARY, BONUS,ENROLL_DATE, RETIRE_DATE,STATEMENT, GENDER,LOGIN_ID,LOGIN_PWD,STATUS
		FROM EMPLOYEE A
		LEFT OUTER JOIN LOGIN_INFO B ON A.EMP_NO = B.EMP_NO
		LEFT OUTER JOIN DEPARTMENT C ON A.DEPT_CODE = C.DEPT_CODE
		LEFT OUTER JOIN JOB D ON A.JOB_CODE = D.JOB_CODE
		WHERE EMP_NO = #{empNo}
		AND STATEMENT = 'Y'
	</select>
	
	<select id="checkMember" parameterType="String" resultType="_int">
		SELECT COUNT(*)
		FROM EMPLOYEE
		WHERE EMP_NO = #{empNo}
		AND STATEMENT = 'Y'
	</select>
	
	<select id="checkMemberId" parameterType="String" resultType="_int">
		SELECT COUNT(*)
		FROM LOGIN_INFO
		WHERE LOGIN_ID = #{loginId}
	</select>
	
	<select id="searchLoginId" parameterType="String" resultType="String">
		SELECT LOGIN_ID
		FROM LOGIN_INFO
		WHERE EMP_NO = #{empNo}
	</select>
	
	
</mapper>
